webpackJsonp([0xbcfb691abfa3],{765:function(e,t){e.exports={data:{site:{siteMetadata:{siteUrl:"https://victoriaz.netlify.com",siteTitle:"VictoriaZ programming sketches",siteLogo:"/img/twitterImg.jpg"}},githubData:{data:{user:{repositories:{edges:[{node:{name:"victoriaz.netlify.com",description:"Blog for programmers who love Scala",url:"https://github.com/garrynsk/victoriaz.netlify.com",readme:null}},{node:{name:"tsunami",description:"A frontend part of a Motor project, which is a simple Pratt parser ",url:"https://github.com/garrynsk/tsunami",readme:{text:"# TSUNAMI"}}},{node:{name:"seek-and-buy",description:null,url:"https://github.com/scalamorphing/seek-and-buy",readme:null}},{node:{name:"nitrolanding",description:null,url:"https://github.com/scalamorphing/nitrolanding",readme:null}},{node:{name:"motor",description:"Pratt parser (TDOP)",url:"https://github.com/garrynsk/motor",readme:{text:"\n# MOTOR\n\nPratt parser (TDOP)"}}},{node:{name:"gatsby-seo-starter",description:"It is a 100% SEO ready Gatsby starter for building blogs, especially for programmers, as it can extract a list of repos via GitHub api. It also includes tags, comments, search and social buttons. It uses material ui and styled components.",url:"https://github.com/garrynsk/gatsby-seo-starter",readme:{text:"# Gatsby SEO Starter\n\nThe Gatsby starter with typescript and a lot of goodies.\n\nIt is a 100% SEO ready gatsby blog starter, especially programming blogs, as it can extract a list of repos via GitHub api. It also includes tags, comments, search, social buttons and SEO support.\n\n#### Preview\n[victoriaz.netlify.com](https://victoriaz.netlify.com/)\n\n## How to install\n\nVerify if npm and node are installed on your machine:\n\n```bash\n    node -v && npm -v\n```\n\nOtherwise, install them:\n\n```bash\n    // For Ubuntu\n    sudo apt-get install npm\n    sudo apt-get install node\n```\n\nInstall the starter:\n\n```bash\ngatsby new YourProjectName https://github.com/garrynsk/gatsby-seo-starter\n```\n\nIf you want to configure installed plugins, navigate to gatsby-config.js in the root directory and edit it as you wish.\n\n## The list of preinstalled plugins\nFeel free to configure them.\n\n#### Images/Video\n\n1. [gatsby-image](https://www.gatsbyjs.org/packages/gatsby-image/?=gatsby-image#gatsby-image)\nSpeedy, optimized images without the work.\n\n2. [gatsby-remark-responsive-image](https://www.gatsbyjs.org/packages/gatsby-remark-responsive-image/?=gatsby-remark-responsive-image#gatsby-remark-responsive-image)\nMake images in markdown responsive.\n\n3. [gatsby-plugin-sharp](https://www.gatsbyjs.org/packages/gatsby-plugin-sharp/?=gatsby-plugin-sharp#gatsby-plugin-sharp)\nExposes several image processing functions built on the Sharp image processing library.\n\n4. [gatsby-remark-images](https://www.gatsbyjs.org/packages/gatsby-remark-images/?=gatsby-remark-images#gatsby-remark-images)\nProcesses images in markdown so they can be used in the production build.\n\n5. [gatsby-remark-responsive-iframe](https://www.gatsbyjs.org/packages/gatsby-remark-responsive-iframe/?=gatsby-remark-responsive-iframe#gatsby-remark-responsive-iframe)\nWraps iframes or objects (e.g. embedded YouTube videos) within markdown files in a responsive elastic container with a fixed aspect ratio.\n\n6. [gatsby-transformer-sharp](https://www.gatsbyjs.org/packages/gatsby-transformer-sharp/?=gatsby-transformer-sharp#gatsby-transformer-sharp)\nCreates ImageSharp nodes from image types that are supported by the Sharp image processing library and provides fields in their GraphQL types for processing your images in a variety of ways including resizing, cropping, and creating responsive images.\n\n#### Code blocks\n\n1. [gatsby-remark-prismjs](https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/?=gatsby-remark-prismjs#gatsby-remark-prismjs)\nAdds syntax highlighting to code blocks in markdown files using PrismJS.\n\n#### SEO\n\n1. [gatsby-plugin-sitemap](https://www.gatsbyjs.org/packages/gatsby-plugin-sitemap/?=gatsby-plugin-sitemap#gatsby-plugin-sitemap)\nCreate a sitemap for your Gatsby site.\n\n3. [gatsby-plugin-google-analytics](https://www.gatsbyjs.org/packages/gatsby-plugin-google-analytics/?=gatsby-plugin-google-analytics#gatsby-plugin-google-analytics)\nEasily add Google Analytics to your Gatsby site.\n\n4. [gatsby-plugin-manifest](https://www.gatsbyjs.org/packages/gatsby-plugin-manifest/?=gatsby-plugin-manifest#gatsby-plugin-manifest)\nAdds support for shipping a manifest.json with your site. To create manifest.json, you need to run gatsby build.\n\n5. [gatsby-plugin-favicon](https://github.com/Creatiwity/gatsby-plugin-favicon)\nGenerates all favicons for Web, Android, iOS, ...\n\n6. [gatsby-plugin-hotjar](https://www.gatsbyjs.org/packages/gatsby-plugin-hotjar/)\nHotjar analytics.\n\n7. [gatsby-plugin-mixpanel](https://github.com/thomascarvalho/gatsby-plugin-mixpanel)\nPlugin to integrate mixpanel (with react-mixpanel) on your gatsby project.\n\n#### UX\n\n1. [gatsby-plugin-offline](https://www.gatsbyjs.org/packages/gatsby-plugin-offline/?=gatsby-plugin-offline#gatsby-plugin-offline)\nAdds drop-in support for making a Gatsby site work offline and more resistant to bad network connections. It creates a service worker for the site and loads the service worker into the client.\n\n2. [gatsby-plugin-nprogress](https://www.gatsbyjs.org/packages/gatsby-plugin-nprogress/?=gatsby-plugin-nprogress#gatsby-plugin-nprogress)\nAutomatically shows the nprogress indicator when a page is delayed in loading (which Gatsby considers as one second after clicking on a link).\n\n3. [gatsby-plugin-algolia](https://www.npmjs.com/package/gatsby-plugin-algolia)\nSearch powered by Algolia.\n\n4. [gatsby-plugin-feed](https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-feed)\nCreate an RSS feed (or multiple feeds) for your Gatsby site.\n\n#### Dev tools\n\n1. [gatsby-plugin-webpack-bundle-analyzer](https://www.gatsbyjs.org/packages/gatsby-plugin-webpack-bundle-analyzer/?=gatsby-plugin-webpack-bundle-analyzer#gatsby-plugin-webpack-bundle-analyzer)\nA Gatsby plugin to help analyze your bundle content with [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\n2. [gatsby-plugin-debug-build](https://www.gatsbyjs.org/packages/gatsby-plugin-debug-build/?=#gatsby-plugin-debug-build)\nGatsby plugin to force the dev version of builds. NOT FOR USE IN PRODUCTION. This is a debugging utility. Don’t do stupid things with it.\n\n3. [gatsby-plugin-netlify](https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-netlify)\nAutomatically generates a _headers file and a _redirects file at the root of the public folder to configure HTTP headers and redirects on Netlify.\n\n#### Helpers\n\n1. [gatsby-link](https://www.gatsbyjs.org/packages/gatsby-link/?=gatsby-link#gatsby-link)\nA <Link> component for Gatsby. It’s a wrapper around React Router’s Link component that adds enhancements specific to Gatsby. All props are passed through to React Router’s Link.\n\n2. [gatsby-plugin-catch-links](https://www.gatsbyjs.org/packages/gatsby-plugin-catch-links/?=gatsby-plugin-catch-links#gatsby-plugin-catch-links)\nIntercepts local links from markdown and other non-react pages and does a client-side pushState to avoid the browser having to refresh the page.\n\n3. [gatsby-remark-copy-linked-files](https://www.gatsbyjs.org/packages/gatsby-remark-copy-linked-files/?=gatsby-remark-copy-linked-files#gatsby-remark-copy-linked-files)\nCopies local files linked to/from markdown to your public folder.\n\n4. [gatsby-transformer-remark](https://www.gatsbyjs.org/packages/gatsby-transformer-remark/?=gatsby-transformer-remark#gatsby-transformer-remark)\nParses Markdown files using Remark.\n\n5. [gatsby-plugin-fastclick](https://www.gatsbyjs.org/packages/gatsby-plugin-fastclick/?=#gatsby-plugin-fastclick)\nMake your Gatsby app more responsive on touch devices with [Fastclick](https://github.com/ftlabs/fastclick).\n\n6. [gatsby-plugin-react-helmet](https://www.gatsbyjs.org/packages/gatsby-plugin-react-helmet/?=gatsby-plugin-react-helmet#gatsby-plugin-react-helmet)\nProvides drop-in support for server rendering data added with React Helmet. React Helmet is a component which lets you control your document head using their React component.\n\n7. [gatsby-remark-smartypants](https://www.gatsbyjs.org/packages/gatsby-remark-smartypants/?=gatsby-remark-smartypants#gatsby-remark-smartypants)\nReplaces “dumb” punctuation marks with “smart” punctuation marks using the retext-smartypants plugin.\n\n8. [gatsby-source-filesystem](https://www.gatsbyjs.org/packages/gatsby-source-filesystem/?=gatsby-source-filesystem#gatsby-source-filesystem)\nPlugin for creating File nodes from the file system. \n\n9. [gatsby-plugin-twitter](https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-twitter)\nLoads the Twitter JavaScript for embedding tweets. Let's you add tweets to markdown and in other places\n\n#### Language\n\n1. [gatsby-plugin-typescript](https://www.gatsbyjs.org/packages/gatsby-plugin-typescript/?=gatsby-plugin-typescript#gatsby-plugin-typescript)\nProvides drop-in support for TypeScript and TSX.\n\n#### Social\n\n1. [gatsby-source-github-api](https://github.com/ldd/gatsby-source-github-api)\nSource plugin for pulling data into Gatsby from the official GitHub v4 GraphQL API.\n\n2. [gatsby-remark-autolink-headers](https://www.gatsbyjs.org/packages/gatsby-remark-autolink-headers/?=gatsby-remark-autolink-headers#gatsby-remark-autolink-headers)\nAdds GitHub-style links to MarkdownRemark headers.\n\n## Features\n\nUI\n- [x] material-ui\n- [x] styled-components\n\nPosts in markdown\n- [x] Code syntax highlighting\n- [x] Embedded YouTube videos\n- [x] Embedded Tweets\n- [x] Embedded Facebook posts\n- [x] Embedded Reddit comments\n\nSpecial blog features\n- [x] Tags\n- [x] Disqus comments\n- [x] List of Github repositories\n- [x] Search\n\nSocial features\n- [x] Twitter tweet button\n- [x] Facebook share button\n- [x] Google+ share button\n- [x] LinkedIn share button\n\nSEO\n- [x] Sitemap generation\n- [x] robots.txt\n- [x] Meta descriptions\n- [x] Schema.org\n- [x] OpenGraph Tags\n- [x] Twitter Tags\n- [x] Google analytics\n- [x] Web App Manifest\n- [x] All essential favicons\n\nDevelopment tools\n- [x] TSLint for linting\n- [x] Prettier for code style\n- [x] Remark-Lint for linting Markdown\n- [x] write-good for linting English prose\n- [x] gh-pages for deploying to GitHub pages\n\n## Customisation\n\n#### Configuration\nFirst, look as config.js. Here you keep all configuration data. It can be queried like this:\n```graphql\n\nexport const query = graphql`\n  query AboutQuery {\n    site {\n      siteMetadata {\n        siteUrl\n        siteTitle\n        userEmail\n        userName\n        userMoto\n        githubUrl\n        facebookUrl\n        twitterUrl\n        linkednUrl\n        ... // other configuration data\n      }\n    },\n}\n```\n\n#### SEO\n\nI spend quite some time wrapping my head around how to make seo works in gatsby, but finally it works.\nYou must know, that [react-helmet doesn't work with Facebook scrapper](https://github.com/nfl/react-helmet/issues/26). It just fails to fetch dynamic tags. So you have to use some kind of prerendering.\n\nI allow myself to cite [@cjimmy](https://github.com/cjimmy):\n\n###### Convert your app to server-side rendering\nThis is the most obvious solution but the most onerous. You won't be able to use client-side definitions like window in your js. If you're using React Router, you'll have to find a way to mirror the routes between server and client. If you're like me, you might be serverless, and running a server would be a lot more work. On the other hand, your page will likely load faster, and crawlers will see what your users would. This is a non-exhaustive list of tradeoffs.\n\n###### Use a pre-rendering service\nPrerender.io, Render-tron, and Prerender.cloud to name a few, give you a way to server-side render when the user-agent is a bot. Some CDNs like Netlify and Roast.io do this for you so you don't have to run your own server.\nThe downside to this is this is yet another service to pay for.\n\n###### Pre-render on your own\nA couple of packages exist for rendering your React app statically. Graphcool's Prep, React-Snap, React-Snapshot were ones I've found that all essentially run a local server to render the site and download the html files. The files won't be pretty, but if all you're looking for is the <head> generated by React Helmet, this will do.\n\nI tried Prep, React-Snap, but they failed. So I ended up using Netlify prerendering feature. It works just fine.\n\nAlso, react-helmet inserts meta tags in the end of a header. But most of the crawlers limits their search. At least Facebook couldn't find my headers after gatsby's inlined styles. So I wrote some plain simple helpers for tags inserting. You may find them in components/seo/seo.tsx.\n\nI introduced some great free services for site monitoring: hotjar, mixpanel, heap, google-analytics and google tagmanager. I recommend you to use tagmanager whenever you need to insert static meta tags. It is very convenient. I installed Google Optimiser, Conversion Linker and Facebook Pixel with this. And Facebook Pixel now works fine. But you can try [gatsby-plugin-facebook-analytics](https://www.gatsbyjs.org/packages/gatsby-plugin-facebook-analytics/?=#gatsby-plugin-facebook-analytics). I didn't manage it, though. It fails with Facebook Pixel Helper. Maybe it is my fault.\n\nI checked my blog's SEO health with:\n\n1. [OpenLink Structured Data Sniffer](http://osds.openlinksw.com/)\n2. [SEOQuake](https://www.seoquake.com/index.html)\n3. [Google's Structured Data testing tool](https://search.google.com/structured-data/testing-tool#url=victoriaz.netlify.com%2Frepositories)\n4. [Dareboost](www.dareboost.com)\n5. [Facebook Sharing Debugger](https://developers.facebook.com/tools/debug/sharing/)\n6. [Twitter Card Validator](https://cards-dev.twitter.com/validator)\n7. Screaming Frog\n\nAnd a bunch of other tools!\n\n#### Posts\n\nTo define custom tags you need to write them in every post in the block at the beginning of the post. Like this:\n\n```markdown\n---\ntitle: \"What Are They, Monads, Angels or Demons?\"\ndate: \"2018-03-26T10:30:00.000Z\"\nauthor: \"Zakharova Victoria\"\npath: \"/monads\"\nfeaturedImage: \"./angels.jpg\"\ntags: [\"monads\", \"Scala\"]\n---\n```\nEvery post has it's featured image, which will be shown on the Home page and in the post itself. You should it define in the every post too.\n\n#### Plugins\n\nYour plugins can be configurated in gatsby-node.js.\n\n1. gatsby-source-github-api\nYou must provide token and graphQL query.\n\n2. gatsby-plugin-webpack-bundle-analyzer\nIs disabled by default. If you need it, change the value of the \"disable\" parameter.\n\n3. gatsby-plugin-google-analytics\nYou must provide trackingId.\n\n4. gatsby-plugin-facebook-analytics\nYou must provide appId.\n\n5. gatsby-plugin-mixpanel \nYou must provide apiToken.\n\n6. gatsby-plugin-feed \nWrite a query.\n\n7. gatsby-plugin-hotjar \nProvide an id.\n        \n#### Social\n\nFor social buttons is used sharethis service. You can configure it in components/seo/seo.tsx.\n\nFor social icons is used react-icons/lib/fa. You can configure it in components/footer/footer.tsx\n\nIn the file parser/parser.tsx is stored a parser for google API.\n\n#### Embed \n\nYou can include or exclude scripts for embed links from templates/post.tsx. \n\nOh, I forgot some issues. The first one with repositories' readme. Starter doesn't fetch images and code from readme, it fetches text anyway, but I hope I find time to deal with it.\nAnd the second one is performance. It is not notoriously slow, but doesn't perform as fast as I expected. So, if anyone can advise me how to improve the situation, it will be great.\n\n### Enjoi!"}}},{node:{name:"falgebra",description:"The library containts traits describing FAlgebras.",url:"https://github.com/garrynsk/falgebra",readme:{text:"\n## Architect: F-Algebra\n\nA great [introduction to F-algebras](https://bartoszmilewski.com/2013/06/10/understanding-f-algebras/) was posted by Bartosz Milewski. \n\nThis is a small part of a project called Architect, which suppose to help Dotty programmers to get rid of a big piece of boilerplate.\n\nThe library is a higher kinds version of [an algebra library](https://github.com/garrynsk/algebra).\n\nThe library also containts traits describing algebraic structures in a categorial theoretic sense. Such as:\n\nCategoryF\nSemicategoryF\nSemigroupF\nMonoidF\nGroupoidF\nGroupF\nRingF\nand others."}}},{node:{name:"duna",description:"Scala library for easy concurrency. Will be something in between Akka and FRP in the near future. :)",url:"https://github.com/ReactiveMutator/duna",readme:null}},{node:{name:"architect",description:null,url:"https://github.com/garrynsk/architect",readme:{text:"## sbt project compiled with Dotty\n\n### Usage\n\nThis is a normal sbt project, you can compile code with `sbt compile` and run it\nwith `sbt run`, `sbt console` will start a Dotty REPL.\n\nFor more information on the sbt-dotty plugin, see the\n[dotty-example-project](https://github.com/lampepfl/dotty-example-project/blob/master/README.md).\n"}}},{node:{name:"algebra",description:"The library containts Dotty traits describing algebraic structures in a categorial theoretic sense.",url:"https://github.com/garrynsk/algebra",readme:{text:"\n## Architector: Algebra\n\nThis is a small part of a project called Architector, which suppose to help Dotty programmers to get rid of a big piece of boilerplate.\n\nThe library containts traits describing algebraic structures in a categorial theoretic sense. \nSuch as:\n\n- Category\n- Semicategory\n- Semigroup\n- Monoid\n- Groupoid\n- Group\n- Ring\n\nand others.\n\n### Library Design\n\nIt was decided to refuse usual practice of typeclass inheritance because of knows [issues](https://typelevel.org/blog/2016/09/30/subtype-typeclasses.html).\n\nAll properties were moved to usual traits in algebra/stones and bricks folders. They inherite from each other in a usual way.\nThe structure is described in a diagram below.\n\n![Library Design](scheme.svg)\n\nIt is easy to extend usual traits for creating custom typeclasses.\n\n### Getting Started\n\nMany examples are in the instance folder and tests. \n\nCreate an instance:\n\n```scala\n    implicit def intRing: Ring[Int] = new Ring[Int] {\n\n        override def zero: Int = 0\n\n        override def add(a: Int, b: Int): Int = a + b \n\n        override def one: Int = 1\n\n        override def mult(a: Int, b: Int): Int = a * b    \n\n        override def negation(a: Int): Int = -a \n    }\n```\n"}}}]}}}}},pathContext:{}}}});
//# sourceMappingURL=path---repositories-13667dadb00debde76d8.js.map